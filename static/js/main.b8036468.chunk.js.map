{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","useState","data","tasks","setTasks","edittedItem","setEdittedItem","Provider","value","addTask","title","id","uuid","complete","removeTask","filter","task","findItem","item","find","editTask","newTasks","map","toggleHandler","children","Task","console","log","useContext","className","onClick","TaskList","TaskForm","setTitle","useEffect","onSubmit","e","preventDefault","class","onChange","target","type","placeholder","required","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAIaA,EAAkBC,0BA0DhBC,EAxDiB,SAACC,GAC/B,MAA0BC,mBAASC,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCH,mBAAS,MAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAqCA,OACE,cAACT,EAAgBU,SAAjB,CACEC,MAAO,CACLL,QACAE,cACAI,QAvCU,SAACC,GACfN,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEO,QAAOC,GAAIC,cAAQC,UAAU,OAuC/CC,WAnCa,SAACH,GAClBP,EAASD,EAAMY,QAAO,SAACC,GAAD,OAAUA,EAAKL,KAAOA,OAmCxCM,SA/BW,SAACN,GAChB,IAAMO,EAAOf,EAAMgB,MAAK,SAACH,GAAD,OAAUA,EAAKL,KAAOA,KAC9CL,EAAeY,IA8BXE,SA1BW,SAACV,EAAOC,EAAIE,GAC3B,IAAMQ,EAAWlB,EAAMmB,KAAI,SAACN,GAAD,OACzBA,EAAKL,KAAOA,EAAK,CAAED,QAAOC,KAAIE,YAAaG,KAE7CZ,EAASiB,GACTf,EAAe,OAsBXiB,cAlBgB,SAACZ,GACrB,IAAMU,EAAWlB,EAAMmB,KAAI,SAACN,GAC1B,OAAOA,EAAKL,KAAOA,EAAZ,2BACEK,GADF,IACQH,UAAWG,EAAKH,WADxB,eAEEG,MAEXZ,EAASiB,KAIT,SAWGrB,EAAMwB,YC5BEC,EA1BF,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACdU,QAAQC,IAAIX,GACZ,MAAgDY,qBAAW/B,GAAnDiB,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,SAAUM,EAA9B,EAA8BA,cAC9B,OACE,qBAAIM,UAAU,2BAAd,UACE,sBACEA,UAAWb,EAAKH,SAAW,SAAW,GACtCiB,QAAS,kBAAMP,EAAcP,EAAKL,KAFpC,SAIGK,EAAKN,QAER,gCACE,wBACEmB,UAAU,sBACVC,QAAS,kBAAMhB,EAAWE,EAAKL,KAFjC,SAIE,mBAAGkB,UAAU,uBAEf,wBAAQA,UAAU,eAAeC,QAAS,kBAAMb,EAASD,EAAKL,KAA9D,SACE,mBAAGkB,UAAU,wBCLRE,EAbE,WACf,IAAQ5B,EAAUyB,qBAAW/B,GAArBM,MACR,OACE,8BACE,oBAAI0B,UAAU,aAAd,SACG1B,EAAMmB,KAAI,SAACN,GACV,OAAO,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKL,YCyC9BqB,EAhDE,WACf,MAA2CJ,qBAAW/B,GAA9CY,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,YAAae,EAA9B,EAA8BA,SAC9B,EAA0BnB,mBAAS,IAAnC,mBAAOS,EAAP,KAAcuB,EAAd,KA2BA,OARAC,qBAAU,WAEND,EADE5B,EACOA,EAAYK,MAEZ,MAEV,CAACL,IAGF,sBAAM8B,SAzBc,SAACC,GACrBA,EAAEC,iBACGhC,EAIHe,EAASV,EAAOL,EAAYM,GAAIN,EAAYQ,WAH5CJ,EAAQC,GACRuB,EAAS,MAqBX,SACE,sBAAKK,MAAM,aAAX,UACE,uBACET,UAAU,eACVU,SAlBc,SAACH,GACrBH,EAASG,EAAEI,OAAOhC,QAkBZA,MAAOE,EACP+B,KAAK,OACLC,YAAY,aACZC,UAAQ,IAEV,wBAAQd,UAAU,uBAAuBY,KAAK,SAA9C,SACGpC,EAAc,kBAAoB,qBCtC9BuC,EAJA,WACb,OAAO,oBAAIf,UAAU,cAAd,8BCgBMgB,EAZH,WACV,OACE,cAAC,EAAD,UACE,sBAAKhB,UAAU,wBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCTRiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b8036468.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport data from '../data.json';\nimport { v4 as uuid } from 'uuid';\n\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = (props) => {\n  const [tasks, setTasks] = useState(data);\n  const [edittedItem, setEdittedItem] = useState(null);\n\n  //add a task\n  const addTask = (title) => {\n    setTasks([...tasks, { title, id: uuid(), complete: false }]);\n  };\n\n  //remove a task\n  const removeTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //find a task\n  const findItem = (id) => {\n    const item = tasks.find((task) => task.id === id);\n    setEdittedItem(item);\n  };\n\n  //edit a task\n  const editTask = (title, id, complete) => {\n    const newTasks = tasks.map((task) =>\n      task.id === id ? { title, id, complete } : task\n    );\n    setTasks(newTasks);\n    setEdittedItem(null);\n  };\n\n  //mark a task as done as undone\n  const toggleHandler = (id) => {\n    const newTasks = tasks.map((task) => {\n      return task.id === id\n        ? { ...task, complete: !task.complete }\n        : { ...task };\n    });\n    setTasks(newTasks);\n  };\n\n  return (\n    <TaskListContext.Provider\n      value={{\n        tasks,\n        edittedItem,\n        addTask,\n        removeTask,\n        findItem,\n        editTask,\n        toggleHandler,\n      }}\n    >\n      {props.children}\n    </TaskListContext.Provider>\n  );\n};\n\nexport default TaskListContextProvider;\n","import React, { useContext } from 'react';\nimport { TaskListContext } from '../context/TaskListContext';\n\nconst Task = ({ task }) => {\n  console.log(task);\n  const { removeTask, findItem, toggleHandler } = useContext(TaskListContext);\n  return (\n    <li className=\"list-group-item border-0\">\n      <span\n        className={task.complete ? 'strike' : ''}\n        onClick={() => toggleHandler(task.id)}\n      >\n        {task.title}\n      </span>\n      <div>\n        <button\n          className=\"btn btn-danger mr-3\"\n          onClick={() => removeTask(task.id)}\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n        </button>\n        <button className=\"btn btn-info\" onClick={() => findItem(task.id)}>\n          <i className=\"fas fa-pen\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Task;\n","import React, { useContext } from 'react';\nimport { TaskListContext } from '../context/TaskListContext';\nimport Task from './Task';\n\nconst TaskList = () => {\n  const { tasks } = useContext(TaskListContext);\n  return (\n    <div>\n      <ul className=\"list-group\">\n        {tasks.map((task) => {\n          return <Task task={task} key={task.id} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { TaskListContext } from '../context/TaskListContext';\n\nconst TaskForm = () => {\n  const { addTask, edittedItem, editTask } = useContext(TaskListContext);\n  const [title, setTitle] = useState('');\n\n  //function to handle adding task or editting task\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!edittedItem) {\n      addTask(title);\n      setTitle('');\n    } else {\n      editTask(title, edittedItem.id, edittedItem.complete);\n    }\n  };\n\n  //function to set value of title to state when input form is changed\n  const changeHandler = (e) => {\n    setTitle(e.target.value);\n  };\n\n  ////function to set value of title to editted input field\n  useEffect(() => {\n    if (edittedItem) {\n      setTitle(edittedItem.title);\n    } else {\n      setTitle('');\n    }\n  }, [edittedItem]);\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div class=\"form-group\">\n        <input\n          className=\"form-control\"\n          onChange={changeHandler}\n          value={title}\n          type=\"text\"\n          placeholder=\"add a task\"\n          required\n        />\n        <button className=\"btn btn-primary mt-3\" type=\"submit\">\n          {edittedItem ? 'Finish editting' : 'Add a task'}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import React from 'react';\n\nconst Header = () => {\n  return <h1 className=\"text-center\">Task Management</h1>;\n};\n\nexport default Header;\n","import React from 'react';\nimport '../App.scss';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport Header from './Header';\nimport TaskListContextProvider from '../context/TaskListContext';\n\nconst App = () => {\n  return (\n    <TaskListContextProvider>\n      <div className=\"container text-center\">\n        <Header />\n        <TaskForm />\n        <TaskList />\n      </div>\n    </TaskListContextProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}